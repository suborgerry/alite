<style>
  .ts-banner {
    background: #000;
    height: 100%;
    min-height: calc(100vh - 178px);
  }

  .ts-banner__container {
    max-width: 1240px;
    margin: 0 auto;
    padding: 0 50px;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    min-height: inherit;
    position: relative;
  }

  .ts-banner__title {
    color: #FFF;
    font-family: 'Grtsk' !important;
    font-size: 80px;
    font-style: normal;
    font-weight: 700;
    line-height: 1;
    max-width: 550px;
    position: relative;
    z-index: 1;
  }

  .ts-lightning {
    display: inline-flex;
    position: absolute;
    padding-left: 20px;
  }

  .ts-fire {
    display: inline-flex;
    position: absolute;
    opacity: 0.4;
    filter: blur(2px);
    top: 30px;
    left: 350px;
  }

  .ts-banner__video {
    display: flex;
  }

  .ts-banner__video video {
    max-height: 400px;
    object-fit: cover;
  }

  .ts-banner__description {
    width: 100%;
    margin-bottom: 40px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: end;
  }

  .ts-banner__description * {
    color: #FFF;
    text-align: center;
    font-family: "ShopifySans" !important;
    font-size: 24px;
    font-style: normal;
    font-weight: 500;
    line-height: normal;
    margin: 0;
  }

  .ts-banner__description > p:first-of-type {
    margin: 0 0 25px;
  }

  .ts-fire,
  .ts-banner__title,
  .ts-banner__video {
    transition: opacity 0.4s
    , transform 0.3s;
    opacity: 0;
    transform: translateY(10px);
  }

  .ts-fire.animated {
    opacity: 0.4;
    transform: translateY(0);
  }

  .ts-banner__title.animated,
  .ts-banner__video.animated {
    opacity: 1;
    transform: translateY(0);
  }

  .ts-banner__description p {
    opacity: 0;
    display: flex;
    align-items: center;
    gap: 1px;
  }

  .ts-banner__description p div {
    display: inline-block;
  }

  .ts-banner__description p div.anime-element {
    text-shadow: 15px 22px 11px rgba(110, 110, 110, 0.2);
    animation-duration: 5s;
    animation-timing-function: ease;
    min-width: 5px;
    opacity: 0;
  }

  @keyframes anime {
    0% {
      transform: translateY(25px);
      opacity: 0;
    }
    2% {
      transform: translateY(0);
      opacity: 1;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @media screen and (max-width: 1200px) {
    .ts-banner__title {
      max-width: 410px;
      font-size: 64px;
    }

    .ts-lightning img,
    .ts-fire img {
      width: 64px;
      height: auto;
    }

    .ts-fire {
      left: 300px;
    }

    .ts-banner__video video {
      max-width: 400px;
    }
  }

  @media screen and (max-width: 899px) {
    .ts-banner__container {
      flex-direction: column;
      align-items: center;
    }

    .ts-banner__title {
      margin: 40px 0 0;
      max-width: 100%;
      text-align: center;
      font-size: 54px;
    }

    .ts-lightning {
      left: 50%;
      top: calc(100% + 10px);
      transform: translateX(-50%);
    }

    .ts-fire {
      left: 80%;
      top: 10px;
    }
  }

  @media screen and (max-width: 600px) {
    .ts-banner__container {
      padding: 0 16px;
    }

    .ts-banner__title {
      font-size: 40px;
      text-align: left;
      max-width: 300px;
      margin: 40px auto 0 0;
    }

    .ts-lightning img,
    .ts-fire img {
      width: 40px;
      height: auto;
    }

    .ts-lightning {
      top: unset;
      left: unset;
      transform: unset;
    }

    .ts-fire {
      top: 17px;
      left: 170px;
    }

    .ts-banner__video {
      width: 100%;
    }

    .ts-banner__video video {
      width: 100%;
      height: auto;
      aspect-ratio: 3 / 2;
      object-fit: cover;
    }
  }
</style>

<div class="ts-banner">
  <div class="ts-banner__container">
    {% if section.settings.title != blank %}
      <h2 class="ts-banner__title">
        {{ section.settings.title }}
        {% if section.settings.enable_light %}
          <span class="ts-lightning">
            <img src="{{ "high-voltage.png" | asset_url }}" width="80">
            <img src="{{ "high-voltage.png" | asset_url }}" width="80">
            <img src="{{ "high-voltage.png" | asset_url }}" width="80">
          </span>
        {% endif %}
      </h2>
    {% endif %}


    {% if section.settings.enable_fire %}
      <span class="ts-fire">
        <img src="{{ "fire.png" | asset_url }}" width="80">
      </span>
    {% endif %}

    {% if section.settings.video != blank %}
      <div class="ts-banner__video">
        {% comment %} {{ section.settings.video | video_tag: width: "400x", autoplay: false, muted: true, controls: false, loop: false }} {% endcomment %}
        <video
          playsinline="playsinline"
          width="500x"
          muted="muted"
          loop="loop"
          preload="metadata">
          <source src="{{ section.settings.video.sources[1].url }}" type="video/mp4">
        </video>
      </div>
    {% endif %}

    {% if section.settings.description != blank %}
      <div class="ts-banner__description">
        {{ section.settings.description }}
      </div>
    {% endif %}
  </div>
</div>

<script>
  (function () {
    window.addEventListener("DOMContentLoaded", () => {
      const title = document.querySelector(".ts-banner__title");
      const fireIcon =  document.querySelector(".ts-fire");
      const video = document.querySelector(".ts-banner__video");
      const description = document.querySelector(".ts-banner__description");

      title.classList.add("animated");
      if(fireIcon) {
        fireIcon.classList.add("animated");
      }

      setTimeout(() => {
        video.classList.add("animated");
        video.querySelector("video").play();
      }, 200);

      document.querySelectorAll(".ts-banner__description p").forEach((paragraph, i) => {
        const arrayOfLetters = [...paragraph.innerHTML];
        // erase title content
        paragraph.innerText = " ";

        arrayOfLetters.forEach((char, index) => {
          const div = document.createElement("div");
        
          div.style.animationDelay = (1 + i) + index / 20 + "s";
          div.innerText = char;
          div.classList.add("anime-element");
          paragraph.appendChild(div);
        });

        paragraph.style.opacity = '1';

        paragraph.querySelectorAll("div").forEach(span => {
          span.style.animationName = "anime";
  
          setTimeout(() => {
            span.style.opacity = "1"
          }, 4500)
        });
      })
    })
  })()
</script>

{% schema %}
  {
    "name": "TS Banner",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Title"
      },
      {
        "type": "checkbox",
        "id": "enable_light",
        "label": "Enable lightning icon on title",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_fire",
        "label": "Enable fire icon on title",
        "default": true
      },
      {
        "type": "richtext",
        "id": "description",
        "label": "Call to action text"
      }, {
        "type": "video",
        "id": "video",
        "label": "Video"
      }
    ],
    "presets": [
      {
        "name": "TS Banner"
      }
    ]
  }
{% endschema %}