{% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
{{ 'component-collection-hero.css' | asset_url | stylesheet_tag }}

{%- style -%}
  @media screen and (max-width: 749px) {
    .collection-hero--with-image .collection-hero__inner {
      padding-bottom: calc({{ settings.media_shadow_vertical_offset | at_least: 0 }}px + 2rem);
    }
  }

  .collection-hero__description rte h1 {
    font-size: 24px
  }
{%- endstyle -%}

<div class="collection-hero{% if section.settings.show_collection_image and collection.image %} collection-hero--with-image{% endif %} color-{{ section.settings.color_scheme }} gradient">
  <div class="collection-hero__inner page-width">
    <div class="collection-hero__text-wrapper">
      <h1 class="collection-hero__title">
        <span class="visually-hidden">{{ 'sections.collection_template.title' | t }}:
        </span>
        {{- collection.title | escape -}}
      </h1>

      {%- if section.settings.show_collection_description -%}
        <div class="collection-hero__description">
          <div
            class="description-content"
            id="collection-description"
            data-full-text="{{ collection.description | escape }}"></div>
        </div>
        <div
          class="show-more-description"
          id="toggle-desc"
          style="cursor:pointer;font-weight:700;margin-bottom:20px">
          {{ 'sections.collection_template.more' | t }}
        </div>
      {%- endif -%}
    </div>

    {%- if section.settings.show_collection_image and collection.image -%}
      <div class="collection-hero__image-container media gradient">
        <img
          srcset="
            {%- if collection.image.width >= 165 -%}{{ collection.image | image_url: width: 165 }} 165w,{%- endif -%}
            {%- if collection.image.width >= 360 -%}{{ collection.image | image_url: width: 360 }} 360w,{%- endif -%}
            {%- if collection.image.width >= 535 -%}{{ collection.image | image_url: width: 535 }} 535w,{%- endif -%}
            {%- if collection.image.width >= 750 -%}{{ collection.image | image_url: width: 750 }} 750w,{%- endif -%}
            {%- if collection.image.width >= 1070 -%}{{ collection.image | image_url: width: 1070 }} 1070w,{%- endif -%}
            {%- if collection.image.width >= 1500 -%}{{ collection.image | image_url: width: 1500 }} 1500w,{%- endif -%}
            {{ collection.image | image_url }} {{ collection.image.width }}w
          "
          src="{{ collection.image | image_url: width: 750 }}"
          sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px, (min-width: 750px) calc(50vw - 130px), calc(50vw - 55px)"
          alt=""
          width="{{ collection.image.width }}"
          height="{{ collection.image.height }}">
      </div>
    {%- endif -%}
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const wrapper = document.querySelector(".collection-hero__description");
    const descEl  = document.getElementById("collection-description");
    const btn     = document.getElementById("toggle-desc");

    const fullText      = descEl.dataset.fullText || "";
    const limit         = 300;
    const truncatedText = fullText.length > limit
      ? fullText.slice(0, limit) + "..."
      : fullText;

    // helper: мерим высоту wrapper под любым текстом
    function measure(text) {
      wrapper.style.maxHeight = "none";
      descEl.innerHTML = text;
      return wrapper.scrollHeight;
    }

    // меряем две высоты
    const fullH      = measure(fullText);
    const truncatedH = measure(truncatedText);

    // стартовая инициализация: показываем усечённый
    descEl.innerHTML = truncatedText;
    wrapper.style.maxHeight = truncatedH + "px";

    let expanded = false;

    btn.addEventListener("click", () => {
      if (!expanded) {
        // === РАСШИРЕНИЕ ===
        descEl.innerHTML = fullText;
        // анимируем до полной высоты
        requestAnimationFrame(() => {
          wrapper.style.maxHeight = fullH + "px";
        });
        btn.textContent = "{{ 'sections.collection_template.hide' | t }}";

      } else {
        // === СВЁРТЫВАНИЕ ===
        // запускаем анимацию до усечённой высоты
        wrapper.style.maxHeight = truncatedH + "px";
        btn.textContent = "{{ 'sections.collection_template.more' | t }}";

        // по окончании анимации меняем контент на усечённый
        const onEnd = (e) => {
          if (e.propertyName === "max-height") {
            descEl.innerHTML = truncatedText;
            wrapper.removeEventListener("transitionend", onEnd);
          }
        };
        wrapper.addEventListener("transitionend", onEnd);
      }

      expanded = !expanded;
    });
  });
</script>


{% schema %}
  {
    "name": "t:sections.main-collection-banner.name",
    "class": "section",
    "settings": [
      {
        "type": "paragraph",
        "content": "t:sections.main-collection-banner.settings.paragraph.content"
      }, {
        "type": "checkbox",
        "id": "show_collection_description",
        "default": true,
        "label": "t:sections.main-collection-banner.settings.show_collection_description.label"
      }, {
        "type": "checkbox",
        "id": "show_collection_image",
        "default": false,
        "label": "t:sections.main-collection-banner.settings.show_collection_image.label",
        "info": "t:sections.main-collection-banner.settings.show_collection_image.info"
      }, {
        "type": "select",
        "id": "color_scheme",
        "options": [
          {
            "value": "accent-1",
            "label": "t:sections.all.colors.accent_1.label"
          },
          {
            "value": "accent-2",
            "label": "t:sections.all.colors.accent_2.label"
          },
          {
            "value": "background-1",
            "label": "t:sections.all.colors.background_1.label"
          },
          {
            "value": "background-2",
            "label": "t:sections.all.colors.background_2.label"
          }, {
            "value": "inverse",
            "label": "t:sections.all.colors.inverse.label"
          }
        ],
        "default": "background-1",
        "label": "t:sections.all.colors.label"
      }
    ]
  }
{% endschema %}